#
# Auto-generated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require "thrift"
require_relative "cloud_queue_client_types"

module Azure::Storage::Stress
  module AutoGenerated
    module CloudQueueClientService
      class Client
        include ::Thrift::Client

        def listQueues(listQueuesPayload, accountInfo)
          send_listQueues(listQueuesPayload, accountInfo)
          return recv_listQueues()
        end

        def send_listQueues(listQueuesPayload, accountInfo)
          send_message("listQueues", ListQueues_args, listQueuesPayload: listQueuesPayload, accountInfo: accountInfo)
        end

        def recv_listQueues()
          result = receive_message(ListQueues_result)
          return result.success unless result.success.nil?
          raise result.storageException unless result.storageException.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, "listQueues failed: unknown result")
        end

        def listQueuesSegmented(listQueuesPayload, accountInfo, maxResults, currentToken)
          send_listQueuesSegmented(listQueuesPayload, accountInfo, maxResults, currentToken)
          return recv_listQueuesSegmented()
        end

        def send_listQueuesSegmented(listQueuesPayload, accountInfo, maxResults, currentToken)
          send_message("listQueuesSegmented", ListQueuesSegmented_args, listQueuesPayload: listQueuesPayload, accountInfo: accountInfo, maxResults: maxResults, currentToken: currentToken)
        end

        def recv_listQueuesSegmented()
          result = receive_message(ListQueuesSegmented_result)
          return result.success unless result.success.nil?
          raise result.storageException unless result.storageException.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, "listQueuesSegmented failed: unknown result")
        end

        def setProperties(thriftRequestOptions, accountInfo, thriftOperationContext, properties)
          send_setProperties(thriftRequestOptions, accountInfo, thriftOperationContext, properties)
          recv_setProperties()
        end

        def send_setProperties(thriftRequestOptions, accountInfo, thriftOperationContext, properties)
          send_message("setProperties", SetProperties_args, thriftRequestOptions: thriftRequestOptions, accountInfo: accountInfo, thriftOperationContext: thriftOperationContext, properties: properties)
        end

        def recv_setProperties()
          result = receive_message(SetProperties_result)
          raise result.storageException unless result.storageException.nil?
          return
        end

        def getProperties(thriftRequestOptions, thriftOperationContext, accountInfo)
          send_getProperties(thriftRequestOptions, thriftOperationContext, accountInfo)
          return recv_getProperties()
        end

        def send_getProperties(thriftRequestOptions, thriftOperationContext, accountInfo)
          send_message("getProperties", GetProperties_args, thriftRequestOptions: thriftRequestOptions, thriftOperationContext: thriftOperationContext, accountInfo: accountInfo)
        end

        def recv_getProperties()
          result = receive_message(GetProperties_result)
          return result.success unless result.success.nil?
          raise result.storageException unless result.storageException.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, "getProperties failed: unknown result")
        end

        def getServiceStats(thriftRequestOptions, thriftOperationContext, accountInfo)
          send_getServiceStats(thriftRequestOptions, thriftOperationContext, accountInfo)
          return recv_getServiceStats()
        end

        def send_getServiceStats(thriftRequestOptions, thriftOperationContext, accountInfo)
          send_message("getServiceStats", GetServiceStats_args, thriftRequestOptions: thriftRequestOptions, thriftOperationContext: thriftOperationContext, accountInfo: accountInfo)
        end

        def recv_getServiceStats()
          result = receive_message(GetServiceStats_result)
          return result.success unless result.success.nil?
          raise result.storageException unless result.storageException.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, "getServiceStats failed: unknown result")
        end
      end

      class Processor
        include ::Thrift::Processor

        def process_listQueues(seqid, iprot, oprot)
          args = read_args(iprot, ListQueues_args)
          result = ListQueues_result.new()
          begin
            result.success = @handler.listQueues(args.listQueuesPayload, args.accountInfo)
          rescue ::XSS::AutoGenerated::WrappedStorageException => storageException
            result.storageException = storageException
          end
          write_result(result, oprot, "listQueues", seqid)
        end

        def process_listQueuesSegmented(seqid, iprot, oprot)
          args = read_args(iprot, ListQueuesSegmented_args)
          result = ListQueuesSegmented_result.new()
          begin
            result.success = @handler.listQueuesSegmented(args.listQueuesPayload, args.accountInfo, args.maxResults, args.currentToken)
          rescue ::XSS::AutoGenerated::WrappedStorageException => storageException
            result.storageException = storageException
          end
          write_result(result, oprot, "listQueuesSegmented", seqid)
        end

        def process_setProperties(seqid, iprot, oprot)
          args = read_args(iprot, SetProperties_args)
          result = SetProperties_result.new()
          begin
            @handler.setProperties(args.thriftRequestOptions, args.accountInfo, args.thriftOperationContext, args.properties)
          rescue ::XSS::AutoGenerated::WrappedStorageException => storageException
            result.storageException = storageException
          end
          write_result(result, oprot, "setProperties", seqid)
        end

        def process_getProperties(seqid, iprot, oprot)
          args = read_args(iprot, GetProperties_args)
          result = GetProperties_result.new()
          begin
            result.success = @handler.getProperties(args.thriftRequestOptions, args.thriftOperationContext, args.accountInfo)
          rescue ::XSS::AutoGenerated::WrappedStorageException => storageException
            result.storageException = storageException
          end
          write_result(result, oprot, "getProperties", seqid)
        end

        def process_getServiceStats(seqid, iprot, oprot)
          args = read_args(iprot, GetServiceStats_args)
          result = GetServiceStats_result.new()
          begin
            result.success = @handler.getServiceStats(args.thriftRequestOptions, args.thriftOperationContext, args.accountInfo)
          rescue ::XSS::AutoGenerated::WrappedStorageException => storageException
            result.storageException = storageException
          end
          write_result(result, oprot, "getServiceStats", seqid)
        end
      end

      # HELPER FUNCTIONS AND STRUCTURES

      class ListQueues_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        LISTQUEUESPAYLOAD = 1
        ACCOUNTINFO = 2

        FIELDS = {
          LISTQUEUESPAYLOAD => { type: ::Thrift::Types::STRUCT, name: "listQueuesPayload", class: ::XSS::AutoGenerated::ListQueuesPayload },
          ACCOUNTINFO => { type: ::Thrift::Types::STRUCT, name: "accountInfo", class: ::XSS::AutoGenerated::StorageAccountInfo }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class ListQueues_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        STORAGEEXCEPTION = 1

        FIELDS = {
          SUCCESS => { type: ::Thrift::Types::STRUCT, name: "success", class: ::XSS::AutoGenerated::ListQueuesResponse },
          STORAGEEXCEPTION => { type: ::Thrift::Types::STRUCT, name: "storageException", class: ::XSS::AutoGenerated::WrappedStorageException }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class ListQueuesSegmented_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        LISTQUEUESPAYLOAD = 1
        ACCOUNTINFO = 2
        MAXRESULTS = 3
        CURRENTTOKEN = 4

        FIELDS = {
          LISTQUEUESPAYLOAD => { type: ::Thrift::Types::STRUCT, name: "listQueuesPayload", class: ::XSS::AutoGenerated::ListQueuesPayload },
          ACCOUNTINFO => { type: ::Thrift::Types::STRUCT, name: "accountInfo", class: ::XSS::AutoGenerated::StorageAccountInfo },
          MAXRESULTS => { type: ::Thrift::Types::I32, name: "maxResults" },
          CURRENTTOKEN => { type: ::Thrift::Types::STRUCT, name: "currentToken", class: ::XSS::AutoGenerated::ThriftQueueContinuationToken }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class ListQueuesSegmented_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        STORAGEEXCEPTION = 1

        FIELDS = {
          SUCCESS => { type: ::Thrift::Types::STRUCT, name: "success", class: ::XSS::AutoGenerated::ListQueuesResponse },
          STORAGEEXCEPTION => { type: ::Thrift::Types::STRUCT, name: "storageException", class: ::XSS::AutoGenerated::WrappedStorageException }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class SetProperties_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        THRIFTREQUESTOPTIONS = 1
        ACCOUNTINFO = 2
        THRIFTOPERATIONCONTEXT = 3
        PROPERTIES = 4

        FIELDS = {
          THRIFTREQUESTOPTIONS => { type: ::Thrift::Types::STRUCT, name: "thriftRequestOptions", class: ::XSS::AutoGenerated::ThriftQueueRequestOptions },
          ACCOUNTINFO => { type: ::Thrift::Types::STRUCT, name: "accountInfo", class: ::XSS::AutoGenerated::StorageAccountInfo },
          THRIFTOPERATIONCONTEXT => { type: ::Thrift::Types::STRUCT, name: "thriftOperationContext", class: ::XSS::AutoGenerated::OperationContext },
          PROPERTIES => { type: ::Thrift::Types::STRUCT, name: "properties", class: ::XSS::AutoGenerated::ThriftStorageServiceProperties }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class SetProperties_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        STORAGEEXCEPTION = 1

        FIELDS = {
          STORAGEEXCEPTION => { type: ::Thrift::Types::STRUCT, name: "storageException", class: ::XSS::AutoGenerated::WrappedStorageException }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetProperties_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        THRIFTREQUESTOPTIONS = 1
        THRIFTOPERATIONCONTEXT = 2
        ACCOUNTINFO = 3

        FIELDS = {
          THRIFTREQUESTOPTIONS => { type: ::Thrift::Types::STRUCT, name: "thriftRequestOptions", class: ::XSS::AutoGenerated::ThriftQueueRequestOptions },
          THRIFTOPERATIONCONTEXT => { type: ::Thrift::Types::STRUCT, name: "thriftOperationContext", class: ::XSS::AutoGenerated::OperationContext },
          ACCOUNTINFO => { type: ::Thrift::Types::STRUCT, name: "accountInfo", class: ::XSS::AutoGenerated::StorageAccountInfo }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetProperties_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        STORAGEEXCEPTION = 1

        FIELDS = {
          SUCCESS => { type: ::Thrift::Types::STRUCT, name: "success", class: ::XSS::AutoGenerated::ThriftStorageServiceProperties },
          STORAGEEXCEPTION => { type: ::Thrift::Types::STRUCT, name: "storageException", class: ::XSS::AutoGenerated::WrappedStorageException }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetServiceStats_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        THRIFTREQUESTOPTIONS = 1
        THRIFTOPERATIONCONTEXT = 2
        ACCOUNTINFO = 3

        FIELDS = {
          THRIFTREQUESTOPTIONS => { type: ::Thrift::Types::STRUCT, name: "thriftRequestOptions", class: ::XSS::AutoGenerated::ThriftQueueRequestOptions },
          THRIFTOPERATIONCONTEXT => { type: ::Thrift::Types::STRUCT, name: "thriftOperationContext", class: ::XSS::AutoGenerated::OperationContext },
          ACCOUNTINFO => { type: ::Thrift::Types::STRUCT, name: "accountInfo", class: ::XSS::AutoGenerated::StorageAccountInfo }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetServiceStats_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        STORAGEEXCEPTION = 1

        FIELDS = {
          SUCCESS => { type: ::Thrift::Types::STRUCT, name: "success", class: ::XSS::AutoGenerated::ThriftServiceStats },
          STORAGEEXCEPTION => { type: ::Thrift::Types::STRUCT, name: "storageException", class: ::XSS::AutoGenerated::WrappedStorageException }
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end
    end
  end
end
